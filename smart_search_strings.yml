---
#:ester:
# - "[#6][CX3](=O)[OX2H0][#6]" #also hits anhydrides but not formic anhydrides
:ester_terminal:
  - "[#6][CX3](=O)[OX2H1]"
:ester_internal:
  - "[#6][CX3](=O)[OX2][#6]"
:ester_excludes_anhydrides:
  - "[CX4]([!O])[CX3](=O)[OX2][CX4]([!O])"
:ketone:
  - "[#6][CX3](=O)[#6]"
:ether:
  - "[OD2]([#6])[#6]"
:amide:
  - "[NX3][CX3](=[OX1])[#6]"
:vinylic_carbon:
  - "[$([CX3]=[CX3])]"
:proton:
  - "[H+]"
:cyano:
  - "[CX2]#[NX1]"
:alkyl_carbon:
  - "[CX4]"
:allenic_carbon:
  - "[$([CX2](=C)=C)]"
:acetylenic_carbon:
  - "[$([CX2]#C)]"
:carbonyl:
  - "[CX3]=[OX1]" #Hits carboxylic acid, ester, ketone, aldehyde, carbonic acid/ester,anhydride, carbamic acid/ester, acyl halide, amide
  - "[$([CX3]=[OX1]),$([CX3+]-[OX1-])]" #Hits either resonance structure
:carbonyl_with_carbon:
  - "[CX3](=[OX1])C" #Hits aldehyde, ketone, carboxylic acid (except formic), anhydride (except formic), acyl halides (acid halides). Won't hit carbamic acid/ester, carbonic acid/ester
:carbonyl_with_nitrogen:
  - "[OX1]=CN" #Hits amide, carbamic acid/ester, poly peptide
:carbonyl_with_oxygen:
  - "[CX3](=[OX1])O" #Hits ester, carboxylic acid, carbonic acid or ester, carbamic acid or ester, anhydride Won't hit aldehyde or ketone
:acyl_halide:
  - "[CX3](=[OX1])[F,Cl,Br,I]" #acid halide, -oyl halide
:aldehyde:
  - "[CX3H1](=O)[#6]"
:anhydride:
  - "[CX3](=[OX1])[OX2][CX3](=[OX1])"
:amidinium:
  - "[NX3][CX3]=[NX3+]"
:carbamate:
  - "[NX3,NX4+][CX3](=[OX1])[OX2,OX1-]" #Hits carbamic esters, acids, and zwitterions
:carbamic_ester:
  - "[NX3][CX3](=[OX1])[OX2H0]"
:carbamic_acid:
  - "[NX3,NX4+][CX3](=[OX1])[OX2H,OX1-]" #Hits carbamic acids and zwitterions.
:carboxylate_ion:
  - "[CX3](=O)[O-]" #Hits conjugate bases of carboxylic, carbamic, and carbonic acids.
:carbonic_acid_or_ester:
  - "[CX3](=[OX1])(O)O" #Carbonic Acid, Carbonic Ester, or combination
:carbonic_acid_or_carbonic_acid_ester: 
  - "[CX3](=[OX1])([OX2])[OX2H,OX1H0-1]" #Hits acid and conjugate base. Won't hit carbonic acid diester
:carbonic_ester:
  - "C[OX2][CX3](=[OX1])[OX2]C" #(carbonic acid diester), Won't hit carbonic acid or combination carbonic acid/ester
:carboxylic_acid:
  - "[CX3](=O)[OX2H1]" #-oic acid, COOH
:carboxylic_acid_or_conjugate_base:
  - "[CX3](=O)[OX1H0-,OX2H1]"
:cyanamide:
  - "[NX3][CX2]#[NX1]"
:hydrogen_atom:
  - "[H]" #Hits SMILES that are hydrogen atoms: [H+] [2H] [H][H]
:not_hydrogen:
  - "[!#1]" #Hits SMILES that are not hydrogen atoms
:mono_hydrogenated_cation:
  - "[+H]" #Hits atoms that have a positive charge and exactly one attached hydrogen: F[C+](F)[H]
:not_mono_hydrogenated:
  - "[!H]" #Hits atoms that don't have exactly one attached hydrogen
  - "[!H1]" #Hits atoms that don't have exactly one attached hydrogen
#:primary_or_secondary_amine_not_amide: ## NOTE
#  - "[NX3;H2,H1;!$(NC=O)]" #not ammonium ion (N must be 3-connected), not ammonia (H count can't be 3). Primary or secondary is specified by N's H-count (H2 & H1 respectively). Also note that "&" (and) is the dafault opperator and is higher precedence that "," (or), which is higher precedence than ";" (and). Will hit cyanamides and thioamides
:enamine:
  - "[NX3][CX3]=[CX3]"
:primary_amine_not_amide:
  - "[NX3;H2;!$(NC=[!#6]);!$(NC#[!#6])][#6]" #Not amide (C not double bonded to a hetero-atom), not ammonium ion (N must be 3-connected), not ammonia (N's H-count can't be 3), not cyanamide (C not triple bonded to a hetero-atom)
#:two_primary_or_secondary_amines:  ### NOTE to fix!
#  - "[NX3;H2,H1;!$(NC=O)].[NX3;H2,H1;!$(NC=O)]" #Here we use the disconnection symbol (".") to match two separate unbonded identical patterns.
:enamine_or_aniline_nitrogen:
  - "[NX3][$(C=C),$(cc)]"
:azide_group:
  - "[$(*-[NX2-]-[NX2+]#[NX1]),$(*-[NX2]=[NX2+]=[NX1-])]" #Hits any atom with an attached azide.
:azide_ion:
  - "[$([NX1-]=[NX2+]=[NX1-]),$([NX1]#[NX2+]-[NX1-2])]" #Hits N in azide ion
:nitrogen:
  - "[#7]" #Nitrogen in N-containing compound. aromatic or aliphatic. Most general interpretation of "azo"
:azo_nitrogen_lowspec:
  - "[NX2]=N" #Low specificity. Hits diazene, azoxy and some diazo structures
:azo_nitrogen_diazene:
  - "[NX2]=[NX2]" #(diaza alkene)
:azoxy_nitrogen:
  - "[$([NX2]=[NX3+]([O-])[#6]),$([NX2]=[NX3+0](=[O])[#6])]"
:diazo_nitrogen:
  - "[$([#6]=[N+]=[N-]),$([#6-]-[N+]#[N])]"
:azole:
  - "[$([nr5]:[nr5,or5,sr5]),$([nr5]:[cr5]:[nr5,or5,sr5])]" #5 member aromatic heterocycle w/ 2double bonds. contains N & another non C (N,O,S) subclasses are furo-, thio-, pyrro- (replace CH o' furfuran, thiophene, pyrrol w/ N)
:hydrazine:
  - "[NX3][NX3]" #H2NNH2
:hydrazone:
  - "[NX3][NX2]=[*]"  #C=NNH2
:substituted_imine:
  - "[CX3;$([C]([#6])[#6]),$([CH][#6])]=[NX2][#6]" #Schiff base
:substituted_or_unsubstituted_imine:
  - "[$([CX3]([#6])[#6]),$([CX3H][#6])]=[$([NX2][#6]),$([NX2H])]"
:iminium:
  - "[NX3+]=[CX3]"
:unsubstituted_dicarboximide:
  - "[CX3](=[OX1])[NX3H][CX3](=[OX1])"
:substituted_dicarboximide:
  - "[CX3](=[OX1])[NX3H0]([#6])[CX3](=[OX1])"
:dicarboxdiimide:
  - "[CX3](=[OX1])[NX3H0]([NX3H0]([CX3](=[OX1]))[CX3](=[OX1]))[CX3](=[OX1])"
:nitrate_group:
  - "[$([NX3](=[OX1])(=[OX1])O),$([NX3+]([OX1-])(=[OX1])O)]" #Also hits nitrate anion
:nitrate_anion:
  - "[$([OX1]=[NX3](=[OX1])[OX1-]),$([OX1]=[NX3+]([OX1-])[OX1-])]"
:nitrile:
  - "[NX1]#[CX2]"
:isonitrile:
  - "[CX1-]#[NX2+]"
:nitro_group:
  - "[$([NX3](=O)=O),$([NX3+](=O)[O-])][!#8]" #Hits both forms
#:two_nitro_groups: ## NOTE
#  - "[$([NX3](=O)=O),$([NX3+](=O)[O-])][!#8].[$([NX3](=O)=O),$([NX3+](=O)[O-])][!#8]"
:nitroso_group:
  - "[NX2]=[OX1]"
:n_oxide:
  - "[$([#7+][OX1-]),$([#7v5]=[OX1]);!$([#7](~[O])~[O]);!$([#7]=[#7])]" #Hits both forms. Won't hit azoxy, nitro, nitroso,or nitrate.
:hydroxyl:
  - "[OX2H]"
:hydroxyl_in_alcohol:
  - "[#6][OX2H]"
:hydroxyl_in_carboxylic_acid:
  - "[OX2H][CX3]=[OX1]"
:hydroxyl_in_h_o_p:
  - "[OX2H]P"
:hydroxyl_acidic:
  - "[$([OH]-*=[!#6])]" #An acidic hydroxyl is a hydroxyl bonded to an atom which is multiply bonded to a hetero atom, this includes carboxylic, sulphur, phosphorous, halogen and nitrogen oxyacids
:enol:
  - "[OX2H][#6X3]=[#6]"
:phenol:
  - "[OX2H][cX3]:[c]"
:enol_or_phenol:
  - "[OX2H][$(C=C),$(cc)]"
:peroxide_groups:
  - "[OX2,OX1-][OX2,OX1-]" #Also hits anions
:phosphoric_acid_groups:
  - "[$(P(=[OX1])([$([OX2H]),$([OX1-]),$([OX2]P)])([$([OX2H]),$([OX1-]),$([OX2]P)])[$([OX2H]),$([OX1-]),$([OX2]P)]),$([P+]([OX1-])([$([OX2H]),$([OX1-]),$([OX2]P)])([$([OX2H]),$([OX1-]),$([OX2]P)])[$([OX2H]),$([OX1-]),$([OX2]P)])]" #Hits both depiction forms. Hits orthophosphoric acid and polyphosphoric acid anhydrides. Doesn't hit monophosphoric acid anhydride esters (including acidic mono- & di- esters) but will hit some polyphosphoric acid anhydride esters (mono- esters on pyrophosphoric acid and longer, di- esters on linear triphosphoric acid and longer)
:phosphoric_ester_groups:
  - "[$(P(=[OX1])([OX2][#6])([$([OX2H]),$([OX1-]),$([OX2][#6])])[$([OX2H]),$([OX1-]),$([OX2][#6]),$([OX2]P)]),$([P+]([OX1-])([OX2][#6])([$([OX2H]),$([OX1-]),$([OX2][#6])])[$([OX2H]),$([OX1-]),$([OX2][#6]),$([OX2]P)])]" #Hits both depiction forms. Doesn't hit non-ester phosphoric_acid groups
:carbo_thiocarboxylate:
  - "[S-][CX3](=S)[#6]"
:carbo_thioester:
  - "S([#6])[CX3](=O)[#6]"
:thio_analog_of_carbonyl:
  - "[#6X3](=[SX1])([!N])[!N]" #Where S replaces O. Not a thioamide
:thiol_sulfide_or_disulfide_sulfur:
  - "[SX2]"
:thiol:
  - "[#16X2H]"
:sulfur_with_atleast_one_hydrogen:
  - "[#16!H0]"
:thioamide:
  - "[NX3][CX3]=[SX1]"
:sulfide:
  - "[#16X2H0]" #-alkylthio - hits disulfides. Won't hit thiols
:mono_sulfide:
  - "[#16X2H0][!#16]" #alkylthio- or alkoxy- Won't hit thiols. Won't hit disulfides.
:disulfide:
  - "[#16X2H0][#16X2H0]" #Won't hit thiols. Won't hit mono-sulfides
#:two_sulfides: ## NOTE
#  - "[#16X2H0][!#16].[#16X2H0][!#16]" #Won't hit thiols. Won't hit mono-sulfides. Won't hit disulfides.
:sulfinate:
  - "[$([#16X3](=[OX1])[OX2H0]),$([#16X3+]([OX1-])[OX2H0])]" #Won't hit Sulfinic Acid. Hits Both Depiction Forms.
:sulfinic_acid:
  - "[$([#16X3](=[OX1])[OX2H,OX1H0-]),$([#16X3+]([OX1-])[OX2H,OX1H0-])]" #Won't hit substituted Sulfinates. Hits Both Depiction Forms. Hits acid and conjugate base (sulfinate).
:sulfone_low_specificity:
  - "[$([#16X4](=[OX1])=[OX1]),$([#16X4+2]([OX1-])[OX1-])]" #Hits all sulfones, including heteroatom-substituted sulfones: sulfonic acid, sulfonate, sulfuric acid mono- & di- esters, sulfamic acid, sulfamate, sulfonamide... Hits Both Depiction Forms.
:sulfone_high_specificity:
  - "[$([#16X4](=[OX1])(=[OX1])([#6])[#6]),$([#16X4+2]([OX1-])([OX1-])([#6])[#6])]" #Only hits carbo- sulfones (Won't hit herteroatom-substituted molecules). Hits Both Depiction Forms.
:sulfonic_acid_high_specificity:
  - "[$([#16X4](=[OX1])(=[OX1])([#6])[OX2H,OX1H0-]),$([#16X4+2]([OX1-])([OX1-])([#6])[OX2H,OX1H0-])]" #Only hits carbo- sulfonic acids (Won't hit herteroatom-substituted molecules). Hits acid and conjugate base. Hits Both Depiction Forms. Hits Arene sulfonic acids.
:sulfonate:
  - "[$([#16X4](=[OX1])(=[OX1])([#6])[OX2H0]),$([#16X4+2]([OX1-])([OX1-])([#6])[OX2H0])]" #(sulfonic ester) Only hits carbon-substituted sulfur (Oxygen may be herteroatom-substituted). Hits Both Depiction Forms.
:sulfonamide:
  - "[$([#16X4]([NX3])(=[OX1])(=[OX1])[#6]),$([#16X4+2]([NX3])([OX1-])([OX1-])[#6])]" #Only hits carbo- sulfonamide. Hits Both Depiction Forms.
:carbo_azosulfone:
  - "[SX4](C)(C)(=O)=N" #Partial N-Analog of Sulfone
:sulfonamide:
  - "[$([SX4](=[OX1])(=[OX1])([!O])[NX3]),$([SX4+2]([OX1-])([OX1-])([!O])[NX3])]" #(sulf drugs) Won't hit sulfamic acid or sulfamate. Hits Both Depiction Forms.
:sulfoxide_low_specificity:
  - "[$([#16X3]=[OX1]),$([#16X3+][OX1-])]" #( sulfinyl, thionyl ) Analog of carbonyl where S replaces C. Hits all sulfoxides, including heteroatom-substituted sulfoxides, dialkylsulfoxides carbo-sulfoxides, sulfinate, sulfinic acids... Hits Both Depiction Forms. Won't hit sulfones.
:sulfoxide_high_specificity:
  - "[$([#16X3](=[OX1])([#6])[#6]),$([#16X3+]([OX1-])([#6])[#6])]" #(sulfinyl , thionyl) Analog of carbonyl where S replaces C. Only hits carbo-sulfoxides (Won't hit herteroatom-substituted molecules). Hits Both Depiction Forms. Won't hit sulfones.
:sulfate:
  - "[$([#16X4](=[OX1])(=[OX1])([OX2H,OX1H0-])[OX2][#6]),$([#16X4+2]([OX1-])([OX1-])([OX2H,OX1H0-])[OX2][#6])]" #(sulfuric acid monoester) Only hits when oxygen is carbon-substituted. Hits acid and conjugate base. Hits Both Depiction Forms.
:sulfuric_acid_ester_low_specificity:
  - "[$([SX4](=O)(=O)(O)O),$([SX4+2]([O-])([O-])(O)O)]" #(sulfate ester); Hits sulfuric acid, sulfuric acid monoesters (sulfuric acids) and diesters (sulfates). Hits acid and conjugate base. Hits Both Depiction Forms.
:sulfuric_acid_diester:
  - "[$([#16X4](=[OX1])(=[OX1])([OX2][#6])[OX2][#6]),$([#16X4](=[OX1])(=[OX1])([OX2][#6])[OX2][#6])]" #Only hits when oxygen is carbon-substituted. Hits Both Depiction Forms.
:sulfamate:
  - "[$([#16X4]([NX3])(=[OX1])(=[OX1])[OX2][#6]),$([#16X4+2]([NX3])([OX1-])([OX1-])[OX2][#6])]" #Only hits when oxygen is carbon-substituted. Hits Both Depiction Forms.
:sulfamic_acid:
  - "[$([#16X4]([NX3])(=[OX1])(=[OX1])[OX2H,OX1H0-]),$([#16X4+2]([NX3])([OX1-])([OX1-])[OX2H,OX1H0-])]" #Hits acid and conjugate base. Hits Both Depiction Forms.
:sulfenic_acid:
  - "[#16X2][OX2H,OX1H0-]" #Hits acid and conjugate base.
:sulfenate:
  - "[#16X2][OX2H0]"
:carbon_to_any_halogen:
  - "[#6][F,Cl,Br,I]"
:halogen:
  - "[F,Cl,Br,I]"
#:three_halides_groups: ## NOTE
#  - "[F,Cl,Br,I].[F,Cl,Br,I].[F,Cl,Br,I]" #Hits SMILES that have three halides.
:acyl_halide:
  - "[CX3](=[OX1])[F,Cl,Br,I]" #(acid halide, -oyl halide)

#experimental SMARTS
:phosphate1:
  - "[PX4](=[OX1])([OX2])([OX2])[OX2]"
:phosphate2:
  - "[PX4](=[OX1])([#8])([#8])([#8])"
:phosphate_nonspecific:  
  - "[PX4](=[OX2])" #not specific
:glycerol:
  - "[CX4](-[OX2])[CX4](-[OX2])[CX4](-[OX2])"
#:glucose_cyclic:
#  - "C1(-[OX2])C(-[CX4OX2)]OC(-[OX2])C(-[OX2])C1(-[OX2])" #do the carbons need the implicit H's?
:aldose:
  - "[CX3H1](=[0X1])[CX4]" #aldopentose, aldohexose --> maybe just the aldehyde is sufficient?
:aldopentose:
  - "[CX3H1](=[0X1])[CX4](-[0X2])[CX4](-[0X2])[CX4](-[0X2])[CX4](-[0X2])" #open form of arabinose, lyxose, ribose
:ketopentose:
  - "[CX4](-[OX2])[CX3](=[OX1])[CX4](-[0X2])[CX4](-[0X2])[CX4](-[0X2])" #open form of ribulose and xylulose 
:aldohexose:
  - "[CX3H1](=[0X1])[CX4](-[0X2])[CX4](-[0X2])[CX4](-[0X2])[CX4](-[0X2])[CX4](-[0X2])" #hits open forms of glucose, allose, altrose, mannose, gulose, idose, galactose, talose
:ketohexose:
  - "[CX4](-[OX2])[CX3](=[OX1])[CX4](-[0X2])[CX4](-[0X2])[CX4](-[0X2])[CX4](-[0X2])" #fructose, psicose, sorbose, tagatose 
:choline:
#  - "[CX4](-[OX2])[CX4][NX4](-[CX4])(-[CX4])(-[CX4])" #should we represent the positive N like this?
  - "[NX4](-[CX4])(-[CX4])(-[CX4])[CX4][CX4][OX2]"
:phosphatidate:
 - "[PX4](=[OX1])([#8])([#8])[#8][CX4][CX4](-[OX2][CX3](=O))[CX4][OX2][CX3](=O)"
:phosphocholine:
#  - "[NX4](-[CX4])(-[CX4])(-[CX4])[CX4][CX4][OX2][PX4](=[OX1])([OX2H1])([OX2H1])" #hits just phosphocholine as independent lipid
  - "[NX4](-[CX4])(-[CX4])(-[CX4])[CX4][CX4][OX2][PX4](=O)(-[#8])(-[#8])" #phosphocholine AND phosphatidylcholine...
:phosphatidylcholine:
  - "[CX3](=[OX1])[OX2][CX4][CX4](-[OX2][CX3](=[OX1]))[CX4][OX2][PX4](=[OX1])(-[#8])[OX2][CX4][CX4][NX4](-[CX4])(-[CX4])(-[CX4])" #doesn't include the two 15C side chains; the SMILE --> CCCCCCCCCCCCCCCC(=O)OC[C@H](COP([O-])(=O)OCC[N+](C)(C)C)OC(=O)CCCCCCCCCCCCCCC"
:inositol:
  - "C1(-[OX2])C(-[OX2])C(-[OX2])C(-[OX2])C(-[OX2])C1(-[OX2])" #a little fuzzy on cyclic SMARTS
:sphingosine:
 # - "[CX4](-[OX2])[CX4](-[NX3])[CX4](-[OX2])[CX3]=[CX3]" #doesn't include last 13 carbons
  - "[#8][CX4][CX4](-[#7])[CX4](-[#8])[CX3]=[CX3][CX4]"
:epoxide_ring:
  - "c1Oc1" #???

# Ryan's additions
:tertiary_amine:
  - "[NX3]"
:quaternary_amine:
  - "[NX4+]"
:sulfonyl:
  - "[SX4](=O)(=O)"
:phenyl:
  - "cccccc"
:para_phenyl:
  - "[cX3]cc[cX3]cc"
:ortho_phenyl:
  - "[cX3][cX3]cccc"
:meta_phenyl:
  - "[cX3]c[cX3]ccc"
#:isoprenoid:
#  - "[CX3](CH3)=[CX3][CX4]"
#:turpenoid:
#  - "[CX3](CH3)=[CX3][CX4]"
:isoprene:
  - "CC(=C)C=C"
:cyclohexane:
  - "C1CCCCCC1"
:chlorine:
  - "Cl"
:hexanone:
  - "cccccc(=O)"
:primary_alcohol:
  - "[CX4]([OX2H])"
:pyrrole:
  - "n1ccc1"
:saturated_fatty_acid_unit:
  - "[CX4H2]"
:unsaturated_fatty_acid_unit:
  - "[CX3H1]"
  - "[CX3H1]=[CX3H1]"
:four_carbon_terminal_ended_saturated_FA:
  - "O[CX3](=O)[CX4H2][CX4H2][CX4H3]" 
:six_carbon_terminal_ended_saturated_FA:
  - "O[CX3](=O)[CX4H2][CX4H2][CX4H2][CX4H2][CX4H3]"
:eight_carbon_terminal_ended_saturated_FA:
  - "O[CX3](=O)[CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H3]"
:ten_carbon_terminal_ended_saturated_FA:
  - "O[CX3](=O)[CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H3]"
:twelve_carbon_terminal_ended_saturated_FA:
  - "O[CX3](=O)[CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H3]"
:fourteen_carbon_terminal_ended_saturated_FA:
  - "O[CX3](=O)[CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H3]"
:sixteen_carbon_terminal_ended_saturated_FA:
  - "O[CX3](=O)[CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H3]"
:eighteen_carbon_terminal_ended_saturated_FA:
  - "O[CX3](=O)[CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H3]"
:twenty_carbon_terminal_ended_saturated_FA:
  - "O[CX3](=O)[CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H3]"
:twenty_two_carbon_terminal_ended_saturated_FA:
  - "O[CX3](=O)[CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H3]"
:twenty_four_carbon_terminal_ended_saturated_FA:
  - "O[CX3](=O)[CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H3]" 
:five_carbon_terminal_ended_saturated_FA:
  - "O[CX3](=O)[CX4H2][CX4H2][CX4H2][CX4H3]"
:seven_carbon_terminal_ended_saturated_FA:
  - "O[CX3](=O)[CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H3]"
:nine_carbon_terminal_ended_saturated_FA:
  - "O[CX3](=O)[CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H3]" 
:eleven_carbon_terminal_ended_saturated_FA:
  - "O[CX3](=O)[CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H3]"
:thirteen_carbon_terminal_ended_saturated_FA:
  - "O[CX3](=O)[CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H3]"
:fifteen_carbon_terminal_ended_saturated_FA:
  - "O[CX3](=O)[CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H3]"
:seventeen_carbon_terminal_ended_saturated_FA:
  - "O[CX3](=O)[CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H3]"
:nineteen_carbon_terminal_ended_saturated_FA:
  - "O[CX3](=O)[CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H2][CX4H3]" 
:three_member_heterocyclic_ring:
  - "[!#6;r3][r3][r3]"
:four_member_heterocyclic_ring:
  - "[!#6;r4][r4][r4][r4]"
:five_member_heterocyclic_ring:
  - "[!#6;r5][r5][r5][r5][r5]"
:six_member_heterocyclic_ring:
  - "[!#6;r6][r6][r6][r6][r6][r6]"
:seven_member_heterocyclic_ring:
  - "[!#6;r7][r7][r7][r7][r7][r7][r7]"
:eight_member_heterocyclic_ring:
  - "[!#6;r8][r8][r8][r8][r8][r8][r8][r8]"
:nine_member_heterocyclic_ring:
  - "[!#6;r9][r9][r9][r9][r9][r9][r9][r9][r9]"
:ten_member_heterocyclic_ring:
  - "[!#6;r10][r10][r10][r10][r10][r10][r10][r10][r10][r10]"
:eleven_member_heterocyclic_ring:
  - "[!#6;r11][r11][r11][r11][r11][r11][r11][r11][r11][r11][r11]"
:twelve_member_heterocyclic_ring:
  - "[!#6;r12][r12][r12][r12][r12][r12][r12][r12][r12][r12][r12][r12]"
:three_member_aliphatic_carbon_ring:
  - "[C;r3][C;r3][C;r3]"
:four_member_aliphatic_carbon_ring:
  - "[C;r4][C;r4][C;r4][C;r4]"
:five_member_aliphatic_carbon_ring:
  - "[C;r5][C;r5][C;r5][C;r5][C;r5]"
:six_member_aliphatic_carbon_ring:
  - "[C;r6][C;r6][C;r6][C;r6][C;r6][C;r6]"
:seven_member_aliphatic_carbon_ring:
  - "[C;r7][C;r7][C;r7][C;r7][C;r7][C;r7][C;r7]"
:eight_member_aliphatic_carbon_ring:
  - "[C;r8][C;r8][C;r8][C;r8][C;r8][C;r8][C;r8][C;r8]"
:nine_member_aliphatic_carbon_ring:
  - "[C;r9][C;r9][C;r9][C;r9][C;r9][C;r9][C;r9][C;r9][C;r9]"
:ten_member_aliphatic_carbon_ring:
  - "[C;r10][C;r10][C;r10][C;r10][C;r10][C;r10][C;r10][C;r10][C;r10][C;r10]"
:eleven_member_aliphatic_carbon_ring:
  - "[C;r11][C;r11][C;r11][C;r11][C;r11][C;r11][C;r11][C;r11][C;r11][C;r11][C;r11]"
:twelve_member_aliphatic_carbon_ring:
  - "[C;r12][C;r12][C;r12][C;r12][C;r12][C;r12][C;r12][C;r12][C;r12][C;r12][C;r12][C;r12]"
:bicyclic_aliphatic_carbon:
  - "[C;R2]"
:tricyclic_aliphatic_carbon:
  - "[C;R3]"
:polycyclic_aliphatic_carbon:
  - "[C;R4]"
:three_member_aromatic_ring:
  - "[a;r3][a;r3][a;r3]"
:four_member_aromatic_ring:
  - "[a;r4][a;r4][a;r4][a;r4]"
:five_member_aromatic_ring:
  - "[a;r5][a;r5][a;r5][a;r5][a;r5]"
:six_member_aromatic_ring:
  - "[a;r6][a;r6][a;r6][a;r6][a;r6][a;r6]"
:seven_member_aromatic_ring:
  - "[a;r7][a;r7][a;r7][a;r7][a;r7][a;r7][a;r7]"
:eight_member_aromatic_ring:
  - "[a;r8][a;r8][a;r8][a;r8][a;r8][a;r8][a;r8][a;r8]"
:nine_member_aromatic_ring:
  - "[a;r9][a;r9][a;r9][a;r9][a;r9][a;r9][a;r9][a;r9][a;r9]"
:ten_member_aromatic_ring:
  - "[a;r10][a;r10][a;r10][a;r10][a;r10][a;r10][a;r10][a;r10][a;r10][a;r10]"
:eleven_member_aromatic_ring:
  - "[a;r11][a;r11][a;r11][a;r11][a;r11][a;r11][a;r11][a;r11][a;r11][a;r11][a;r11]"
:twelve_member_aromatic_ring:
  - "[a;r12][a;r12][a;r12][a;r12][a;r12][a;r12][a;r12][a;r12][a;r12][a;r12][a;r12][a;r12]"
:benzene:
  - "c1ccccc1"
  
#carbon counts; I have seen 10, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 40 carbon counts but they aren't in a straight chain...
#:carbon_count:
#- ""

:acid_anhydride:
  - "[#6][CX3](=O)[OX2][CX3](=O)[#6]" #should we take off the flanking C's?
:triglyceride: #not sure if will work
#  - "[CX4][CX3](=O)[OX2][CX4][CX4]([OX2][CX3](=O)[CX4])[CX4][OX2][CX3](=O)[CX4]"
 - "[CX4](-[OX2][CX3](=O)[CX4])[CX4](-[OX2][CX3](=O)[CX4])[CX4](-[OX2][CX3](=O)[CX4])"
:glycerophosphate:  #2,3-dihydroxypropyl phosphate
  - "[PX4](-[OX2])(=O)(-[OX2])[OX2][CX4][CX4](-[OX2H1])[CX4][OX2H1]"
#:terpene:
#- ""
:carbon:
  - "[#6]"
:not_carbon_or_hydrogen_or_oxygen:
  - "[!#6,!#1,!#8]"
:branched_carbon:
  - "[$([CD3]);!$(C([!C]))]"
:tert_carbon:
  - "[$([CD4]);!$(C([!C]))]"
:methoxy:
  - "[#6](-[OX2][CD1])"
:prostaglandin:
  - "[$([r5]);!$(CO);$([C@@C])]"
:mycolic_acid:
  - "OC(=O)[CX4](C)[CX4](O)(C)"
:ethanolamine:
  - "[#7][CX4][CX4][OX2][HX1]"
  
#SMARTS ADDED FROM http://tech.knime.org/forum/indigo/molecule-functionality-node-request

:Alkane:
  - "[CX4;$([H3][#6]),$([H2]([#6])[#6]),$([H1]([#6])([#6])[#6]),$([#6]([#6])([#6])([#6])[#6])]"
:Alkane_Primary:
  - "[CX4H3][#6]"
:Alkane_Secondary:
  - "[CX4H2]([#6])[#6]"
:Alkane_Tertiary:
  - "[CX4H1]([#6])([#6])[#6]"
:Alkane_Quaternary:
  - "[CX4]([#6])([#6])([#6])[#6]"

:Alkene:
  - "[CX3;$([H2]),$([H1][#6]),$(C([#6])[#6])]=[CX3;$([H2]),$([H1][#6]),$(C([#6])[#6])]"
:Alkyne:
  - "[CX2]#[CX2]"
:Allene:
  - "[CX3]=[CX2]=[CX3]"

:Aniline:
  - "[c][NX3H2]"
:Benzenering:
  - "c1ccccc1"
:Carbazole:
  - "c1c3c(ccc1)c2ccccc2n3- [$([#1]),$([#6])]"
:Iminoarene:
  - "[*;r6]=[NX2]"
:Oxoarene:
  - "[*;r6]=[O]"
:Phenol:
  - "[c][OX2H]"
:Thioarene:
  - "[*;r6]=[S]"

:Amidine:
  - "[NX3][C]=[NX2]"
:Amine:
  - "[NX3,NX3+0,NX4+;!$([N]~[#7,#8,#15,#16])]"
:Amine_Primary:
  - "[NX3H2,NX3H2+0,NX4H3+;!$([N]~[#7,#8,#15,#16])]"
:Amine_Secondary:
  - "[NX3H1,NX3H1+0,NX4H2+;!$([N]~[#7,#8,#15,#16])]"
:Amine_Tertiary:
  - "[NX3H0,NX3H0+0,NX4H1+;!$([N]~[#7,#8,#15,#16])]"
:Ammonium:
  - "[NH4+]"
:Ammonia:
  - "[NH3]"

:Aminal:
  - "[NX3v3;!$(NC=[#7,#8,#15,#16])]~[CX4;!$(C(N)(N)[!#6])]~[NX3v3;!$(NC=[#7,#8,#15,#16])]"
:Aziridine:
  - "C1CN1"
:Azide:
  - "[NX1]~[NX2]~[NX2,NX1]"
:Acylazide:
  - "[CX3](=[OX1])[NX2]~[NX2]~[NX1]"
:Azo:
  - "[#6]- [#7]=[#7]- [#6]"
:Diazo:
  - "[$([#6]=[N+]=[N- ]),$([#6- ]- [N+]#[N])]"
:Diazonium:
  - "[#6][NX2+]#[NX1]"
:Carbodiimide:
  - "[NX2]=[CX2]=[NX2]"
:Enamine:
  - "[NX3;!$(NC~[!#1!#6])][CX3]=[CX3]"
:Guanidine:
  - "[N;v3X3,v4X4+][CX3](=[N;v3X2,v4X3+])[N;v3X3,v4X4+]"
:Hydrazine:
  - "[NX3;$([H2]),$([H1][#6]),$([H0]([#6])[#6]);!$(NC=[O,N,S])][NX3;$([H2]),$([H1][#6]),$([H0]([#6])[#6]);!$(NC=[O,N,S])]"
:Hydrazone:
  - "[NX3;$([H2]),$([H1][#6]),$([H0]([#6])[#6]);!$(NC=[O,N,S])][NX2]=[#6]"
:Iminyl:
  - "[NX2;$([N][#6]),$([NH]);!$([N][CX3]=[#7,#8,#15,#16])]=[CX3;$([CH2]),$([CH][#6]),$([C]([#6])[#6])]"
:Aldimine:
  - "[NX2;$([H1]),$([H0][#6])]=[CX3;$([H2]),$([H1])]"
:Aldimine_Primary:
  - "[NX2;$([H1])]=[CX3;$([H2]),$([H1])]"
:Aldimine_Secondary:
  - "[NX2;$([H0][#6])]=[CX3;$([H2]),$([H1])]"

:ketimine:
  - "[NX2;$([H1]),$([H0][#6])]=[CX3;$([H0][#6])]"
:Primary:
  - "[NX2;$([H1])]=[CX3;$([H0][#6])]"
:Secondary:
  - "[NX2;$([H0][#6])]=[CX3;$([H0][#6])]"

:Isocyanide:
  - "[N+]#[C- ]"
:Nitrile:
  - "[NX1]#[CX2]"
:Thiosemicarbazone:
  - "[#7X2](=[#6])[#7X3][#6X3]([#7X3;!$([#7][#7])])=[SX1]"

:AcylNitrile:
  - "[NX1]#[CX2][CX3]=[OX1]"
:Amide:
  - "[CX3;$([R0][#6]),$([H1R0])](=[OX1])[#7X3H2,#7X3H1,#7X3H0]"
:Amide_Primary:
  - "[CX3;$([R0][#6]),$([H1R0])](=[OX1])[NX3H2]"
:Amide_Secondary:
  - "[CX3;$([R0][#6]),$([H1R0])](=[OX1])[#7X3H1][#6;!$(C=[O,N,S])]"
:Amide_Tertiary:
  - "[CX3;$([R0][#6]),$([H1R0])](=[OX1])[#7X3H0]([#6;!$(C=[O,N,S])])[#6;!$(C=[O,N,S])]"

:Azoxy:
  - "[#6][$([NX2]=[NX3+]([O- ])[#6]),$([NX2]=[NX3+0](=[O])[#6])]"
:Carbamate:
  - "[NX3,NX4+][CX3](=[OX1])[OX2,OX1- ]"
:Cyanate:
  - "[OX2][CX2]#[NX1]"
:Enamide:
  - "[CX3]=[CX3]~[CX3;$([R0][#6]),$([H1R0])](=[OX1])[NX3]"
:Hydroxamicacid:
  - "[OX1]=[CX3][NX3;$([H1][OH])]"
:Hydroxylamine:
  - "[NX3;$([H2]),$([H1][#6]),$([H0]([#6])[#6]);!$(NC=[O,N,S])][OX2H1,OX2H0]"
:Hemiaminal:
  - "[NX3,NX3+0,NX4+;!$([N]~[#7,#8,#15,#16])]~[CX4]~[OX2H]"
:Imidate:
  - "[NX2;$([H1]),$([H0][#6])]=[CX3;$([H0][#8])]"
:Imide:
  - "[CX3](=[OX1])[NX3][CX3](=[OX1])"
:Isocyanate:
  - "[NX2]=[CX2]=[OX1]"
:Lactam:
  - "[#6R][#6X3R](=[OX1])[#7X3H2,#7X3H1,#7X3H0]"
:Nitrate:
  - "[NX3+]([OX1- ])(=[OX1])([OX1- ])"
:Nitrite:
  - "[NX2](=[OX1])[O;$([X2]),$([X1- ])]"
:Nitro:
  - "[$([NX3](=O)=O),$([NX3+](=O)[O- ])][!#8]"
:Nitrone:
  - "[NX3+;$([H1][OX1- ]),$([H0][OX1- ])]=[C]"
:Nitroso:
  - "[NX2](=[OX1])[!#7;!#8]"
:Nitrosamine:
  - "[NX3;!$(N=O)][NX2]=[OX1]"
:Oxime:
  - "[NX2](=[CX3;$([CH2]),$([CH][#6]),$([C]([#6])[#6])])[OX2H]"
:Semicarbazone:
  - "[#7X2](=[#6])[#7X3][#6X3]([#7X3;!$([#7][#7])])=[OX1]"
:Semicarbazide:
  - "[#7X3][#7X3][#6X3]([#7X3;!$([#7][#7])])=[OX1]"
:Thionitrite:
  - "[SX2][NX2]=[OX1]"
:OximEther:
  - "[NX2](=[CX3;$([CH2]),$([CH][#6]),$([C]([#6])[#6])])[OX2][#6;!$(C=[#7,#8])]"
:Urea:
  - "[NX3][CX3](=[OX1])[NX3]"
:Urethane:
  - "[NX3,NX4+][CX3](=[OX1])[OX2,OX1- ]"

:Acetal:
  - "[CX4][OX2][CX4H1]([#6])[OX2][CX4]"
:Anhydride:
  - "[CX3;$([H0][#6]),$([H1])](=[OX1])[#8X2][CX3;$([H0][#6]),$([H1])](=[OX1])"
:Alcohol:
  - "[OX2H][CX4;!$(C([OX2H])[O,S,#7,#15])]"
:Alcohol_Primary:
  - "[OX2H][CX4H2;!$(C([OX2H])[O,S,#7,#15])]"
:Alcohol_Secondary:
  - "[OX2H][CX4H;!$(C([OX2H])[O,S,#7,#15])]"
:Alcohol_Tertiary:
  - "[OX2H][CX4;$([H0])]"

:AminoAlcohol_1_2:
  - "[OX2H][CX4;!$(C([OX2H])[O,S,#7,#15,F,Cl,Br,I])][CX4;!$(C([N])[O,S,#7,#15])][NX3,NX4+;!$(NC=[O,S,N])]"- 1- 2
:Carbonate:
  - "[CX3](=[OX1])([OX2][CX4])[OX2][CX4]"
:Diol_1_2:
  - "[OX2H][CX4;!$(C([OX2H])[O,S,#7,#15])][CX4;!$(C([OX2H])[O,S,#7,#15])][OX2H]"- 1- 2
:Diol_1_1:
  - "[OX2H][CX4;!$(C([OX2H])([OX2H])[O,S,#7,#15])][OX2H]"- 1- 1
:Carbonyl:
  - "[CX3]=[OX1]"
:Aldehyde:
  - "[$([CX3H][#6]),$([CX3H2])]=[OX1]"
:Ketone:
  - "[#6][CX3](=[OX1])[#6]"
:Enone:
  - "[CX3]=[CX3]~[CX3;$([R0][#6]),$([H1R0])](=[OX1])[CX4]"

:CarboxylicAcidDerivative:
  - "[CX3;$([R0][#6]),$([H1R0])](=[OX1])[$([OX2H]),$([OX1- ]),$([OX2][#6;!$(C=[O,N,S])])]"
:CarboxylicAcid:
  - "[CX3;$([R0][#6]),$([H1R0])](=[OX1])[$([OX2H]),$([OX1- ])]"
:CarboxylicEster:
  - "[CX3;$([R0][#6]),$([H1R0])](=[OX1])[OX2][#6;!$(C=[O,N,S])]"

:Enol:
  - "[OX2H][CX3]=[CX3]"
:EnolEster:
  - "[OX2][CX3](=[CX3])[CX3]=[O]"
:EnolEther:
  - "[OX2]([#6;!$(C=[N,O,S])])[CX3;$([H0][#6]),$([H1])]=[CX3]"
:Epoxide:
  - "[OX2r3]1[#6r3][#6r3]1"
:Ether:
  - "[OD2;!$(OC~[!#1!#6])]([#6])[#6]"
:Ketene:
  - "[CX3]=[CX2]=[OX1]"
:Hemiacetal:
  - "[OX2H][CX4H1,!$(C(O)(O)[!#6])][OX2][#6;!$(C=[O,S,N])]"
:Hydrate:
  - "[OX2;$([H2])]"
:Lactone:
  - "[#6][#6X3R](=[OX1])[#8X2][#6;!$(C=[O,N,S])]"
:Peroxide:
  - "[OX2,OX1- ][OX2,OX1- ]"
:	Hydroperoxide:
  - "[OX2H][OX2]"

#Halogens
:Acidhalide:
  - "[CX3;$([R0][#6]),$([H1R0])](=[OX1])[FX1,ClX1,BrX1,IX1]"
:AcidBromide:
  - "[CX3;$([R0][#6]),$([H1R0])](=[OX1])[BrX1]"
:AcidChloride:
  - "[CX3;$([R0][#6]),$([H1R0])](=[OX1])[ClX1]"
:AcidFluoride:
  - "[CX3;$([R0][#6]),$([H1R0])](=[OX1])[FX1]"
:AcidIodide:
  - "[CX3;$([R0][#6]),$([H1R0])](=[OX1])[IX1]"

:AlkenylHalide:
  - "[C]=[C][FX1,ClX1,BrX1,IX1]"
:AlkenylBromide:
  - "[C]=[C][BrX1]"
:AlkenylChloride:
  - "[C]=[C][ClX1]"
:AlkenylFluoride:
  - "[C]=[C][FX1]"
:AlkenylIodide:
  - "[C]=[C][IX1]"

:AlkyneHalide:
  - "[C]#[C][FX1,ClX1,BrX1,IX1]"
:AlkyneBromide:
  - "[C]#[C][BrX1]"
:AlkyneChloride:
  - "[C]#[C][ClX1]"
:AlkyneFluoride:
  - "[C]#[C][FX1]"
:AlkyneIodide:
  - "[C]#[C][IX1]"

:AlkylHalide:
  - "[CX4][FX1,ClX1,BrX1,IX1]"
:AlkylBromide:
  - "[BrX1][CX4]"
:AlkylChloride:
  - "[ClX1][CX4]"
:AlkylFluoride:
  - "[FX1][CX4]"
:AlkylIodide:
  - "[IX1][CX4]"

:ArylHalide:
  - "c1ccccc1[FX1,ClX1,BrX1,IX1]"
:ArylBromide:
  - "c1ccccc1[BrX1]"
:ArylChloride:
  - "c1ccccc1[ClX1]"
:ArylFluoride:
  - "c1ccccc1[FX1]"
:ArylIodide:
  - "c1ccccc1[IX1]"

:Organometallic
:MetallicCompounds:
  - "[Li,Na,K,Rb,Cs,Be,Ca,Sr,Mg,Ba,Sc,Ti,V,Cr,Mn,Fe,Co,Ni,Cu,Zn,Al,Ga,Y,Zr,Nb,Mo,Tc,Ru,Rh,Pd,Ag,Cd,In,Sn,Lu,Hf,Ta,W,Re,Os,Ir,Pt,Au,Hg,Tl,Pb,Bi]"
:LithiumIon:
  - "[Li+]"
:Lithium:
  - "[LiX1]"
:SodiumIon:
  - "[Na+]"
:Sodium:
  - "[NaX1]"
:PotassiumIon:
  - "[K+]"
:Potassium:
  - "[KX1]"
:RubidiumIon:
  - "[Rb+]"
:Rubidium:
  - "[RbX1]"
:CaesiumIon:
  - "[Cs+]"
:Caesium:
  - "[CsX1]"
:BerylliumIon:
  - "[Be++]"
:Beryllium:
  - "[BeX2]"
:CalciumIon:
  - "[Ca++]"
:Calcium:
  - "[CaX2]"
:StrontiumIon:
  - "[Sr++]"
:Strontium:
  - "[SrX2]"
:MagnesiumIon:
  - "[Mg++]"
:Magnesium:
  - "[MgX2]"
:BariumIon:
  - "[Ba++]"
:Barium:
  - "[BaX2]"
:ScandiumIon:
  - "[Sc++]"
:Scandium:
  - "[ScX3]"
:TitaniumIon:
  - "[Ti++++,Ti++++,Ti++]"
:Titanium4Ion:
  - "[Ti++++]"
:Titanium3Ion:
  - "[Ti+++]"
:Titanium2Ion:
  - "[Ti++]"

:	Titanium Samrts:
  - "[TiX4,TiX3]"
:VanadiumIon:
  - "[V+++++,V++++,V+++,V++]"
:Vanadium5Ion:
  - "[V+++++]"
:Vanadium4Ion:
  - "[V++++]"
:Vanadium3Ion:
  - "[V+++]"
:Vanadium2Ion:
  - "[V++]"

:Vanadium:
  - "[VX5,VX4,VX3,VX2]"
:ChromiumIon:
  - "[Cr+++,Cr++]"
:Chromium3Ion:
  - "[Cr+++]"
:Chromium2Ion:
  - "[Cr++]"

:Chromium:
  - "[CrX6,CrX3,CrX2]"
:ManganeseIon:
  - "[Mn+++++++,Mn++++++,Mn++++,Mn+++,Mn++]"
:Manganese7Ion:
  - "[Mn+++++++]"
:Manganese6Ion:
  - "[Mn++++++]"
:Manganese4Ion:
  - "[Mn++++]"
:Manganese3Ion:
  - "[Mn+++]"
:Manganese2Ion:
  - "[Mn++]"

:Manganese:
  - "[MnX7,MnX6,MnX5,MnX4,MnX3,MnX2]"
:IronIon:
  - "[Fe+++,Fe++]"
:Iron3Ion:
  - "[Fe+++]"
:Iron2Ion:
  - "[Fe++]"

:Iron:
  - "[FeX3,FeX2]"
:CobaltIon:
  - "[Co+++,Co++]"
:Cobalt3Ion:
  - "[Co+++]"
:Cobalt2Ion:
  - "[Co++]"

:Cobalt:
  - "[CoX3,CoX2]"
:NickelIon:
  - "[Ni+++,Ni++]"
:Nickel3Ion:
  - "[Ni+++]"
:Nickel2Ion:
  - "[Ni++]"

:Nickel:
  - "[NiX3,NiX2]"
:CopperIon:
  - "[Cu++,Cu+]"
:Copper2Ion:
  - "[Cu++]"
:Copper1Ion:
  - "[Cu+]"

:Copper:
  - "[CuX2]"
:zincIon:
  - "[Zn++]"
:zinc:
  - "[ZnX2]"
:AluminiumIon:
  - "[Al+++]"
:Aluminium:
  - "[AlX3]"
:GalliumIon:
  - "[Ga+++]"
:Gallium:
  - "[GaX3,GaX2]"
:YttriumIon:
  - "[Y+++]"
:Yttrium:
  - "[YX3]"
:ZirconiumIon:
  - "[Zr++++]"
:Zirconium:
  - "[ZrX4,ZrX3,ZrX2]"
:NiobiumIon:
  - "[Nb+++++,Nb++++,Nb+++,Nb++]"
:Niobium5Ion:
  - "[Nb+++++]"
:Niobium4Ion:
  - "[Nb++++]"
:Niobium3Ion:
  - "[Nb+++]"
:Niobium2Ion:
  - "[Nb++]"

:Niobium:
  - "[NbX5,NbX4,NbX3,NbX2]"
:MolybdenumIon:
  - "[Mo++++++,Mo+++++,Mo++++,Mo+++,Mo++]"
:Molybdenum6Ion:
  - "[Mo++++++]"
:Molybdenum5Ion:
  - "[Mo+++++]"
:Molybdenum4Ion:
  - "[Mo++++]"
:Molybdenum3Ion:
  - "[Mo+++]"
:Molybdenum2Ion:
  - "[Mo++]"

:Molybdenum:
  - "[MoX6,MoX5,MoX4,MoX3,MoX2]"
:Technetium:
  - "[TcX7,TcX6,TcX5,TcX4,TcX2]"
:RutheniumIon:
  - "[Ru++++,Ru+++,Ru++]"
:Ruthenium4Ion:
  - "[Ru++++]"
:Ruthenium3Ion:
  - "[Ru+++]"
:Ruthenium2Ion:
  - "[Ru++]"

:Ruthenium:
  - "[RuX4,RuX3,RuX2]"
:RhodiumIon:
  - "[Rh+++,Rh++]"
:Rhodium3Ion:
  - "[Rh+++]"
:Rhodium2Ion:
  - "[Rh++]"

:Rhodium:
  - "[RhX6,RhX5,RhX4,RhX3,RhX2]"
:PalladiumIon:
  - "[Pd++++,Pd++]"
:Palladium3Ion:
  - "[Pd++++]"
:Palladium2Ion:
  - "[Pd++]"

:Palladium:
  - "[PdX4,PdX2]"
:SilverIon:
  - "[Ag+++,Ag++,Ag+]"
:Silver3Ion:
  - "[Ag+++]"
:Silver2Ion:
  - "[Ag++]"
:Silver1Ion:
  - "[Ag+]"
	
:Silver:
  - "[AgX3,AgX2,AgX2]"
:CadmiumIon:
  - "[Cd++]"
:Cadmium:
  - "[CdX2]"
:Indium:
  - "[InX3]"
:TinIon:
  - "[Sn++++,Sn++]"
:TinIon:
  - "[Sn++++]"
:TinIon:
  - "[Sn++]"
	
:Tin:
  - "[SnX4,SnX2]"
:Lutetium:
  - "[LuX3]"
:Hafnium:
  - "[HfX4]"
:Tantalum:
  - "[TaX5,TaX4,TaX3]"
:Tungsten:
  - "[WX6,WX5,WX4,WX3,WX2,WX2]"
:Rhenium:
  - "[ReX7,ReX6,ReX4,ReX2]"
:Osmium:
  - "[OsX4,OsX3]"
:Iridium:
  - "[IrX6,IrX4,IrX3,IrX2]"
:Platinum:
  - "[PtX4,PtX3,PtX2]"
:Gold:
  - "[AuX3,AuX1]"
:Mercury:
  - "[HgX2,HgX1]"
:Thallium:
  - "[TlX3,TlX1]"
:Lead:
  - "[PbX4,PbX2]"
:Bismuth:
  - "[BiX5,BiX3]"

:Metalloid:
  - "[B,Si,Ge,As,Sb,Te,At]"
:Boron:
  - "[BX3,BX4- ]"
:Silicon:
  - "[SiX4,SiX3,SiX2,SiX1,SiX4- ,SiX3- ,SiX2- ,SiX1- ]"
:Germanium:
  - "[GeX4,GeX3,GeX2,GeX1,GeX4- ,GeX3- ,GeX2- ,GeX1- ]"
:Arsenic:
  - "[AsX5,AsX3,AsX2,AsX1,AsX3- ]"
:Antimony:
  - "[SbX5,SbX4+,SbX3,SbX3- ]"
:Tellurium:
  - "[TeX6,TeX5,TeX4,TeX2,TeX2- ]"


:PhosphoricAcidDerivative:
  - "[PX4D4](=[!#6])([!#6])([!#6])[!#6]"
:PhosphoricAcid:
  - "[PX4D4](=[OX1])([$([OX2H]),$([OX1- ])])([$([OX2H]),$([OX1- ])])[$([OX2H]),$([OX1- ])]"
:PhosphoricMonoester:
  - "[PX4D4](=[OX1])([$([OX2H]),$([OX1- ])])([$([OX2H]),$([OX1- ])])[OX2][#6;!$(C=[O,N,S])]"
:PhosphoricDiester:
  - "[PX4D4](=[OX1])([$([OX2H]),$([OX1- ])])([OX2][#6;!$(C=[O,N,S])])[OX2][#6;!$(C=[O,N,S])]"
:PhosphoricTriester:
  - "[PX4D4](=[OX1])([OX2][#6;!$(C=[O,N,S])])([OX2][#6;!$(C=[O,N,S])])[OX2][#6;!$(C=[O,N,S])]"
:PhosphoricMonoamide:
  - "[PX4D4](=[#8])([#8])([#8])[#7X3H2,#7X3H1,#7X3H0]"
:PhosphoricDiamide:
  - "[PX4D4](=[#8])([#8])([#7X3H2,#7X3H1,#7X3H0])[#7X3H2,#7X3H1,#7X3H0]"
:PhosphoricTriamide:
  - "[PX4D4](=[#8])([#7X3H2,#7X3H1,#7X3H0])([#7X3H2,#7X3H1,#7X3H0])[#7X3H2,#7X3H1,#7X3H0]"

:Phosphane:
  - "[PX3;$([H3]),$([H2][#6]),$([H1]([#6])[#6]),$([H0]([#6])([#6])[#6])]"
:PhosphineOxide:
  - "[PX4;$([H3]=[OX1]),$([H2](=[OX1])[#6]),$([H1](=[OX1])([#6])[#6]),$([H0](=[OX1])([#6])([#6])[#6])]"
:PhosphineSulfide:
  - "[PX4;$([H3]=[SX1]),$([H2](=[SX1])[#6]),$([H1](=[SX1])([#6])[#6]),$([H0](=[SX1])([#6])([#6])[#6])]"
:PhosphonicAcidDerivative:
  - "[PX4;$([H1]),$([H0][#6])](=[#8])([!#6])[!#6]"
:PhosphonicAcid:
  - "[PX4;$([H1]),$([H0][#6])](=[OX1])([$([OX2H]),$([OX1- ])])[$([OX2H]),$([OX1- ])]"
:PhosphonicMonoester:
  - "[PX4;$([H1]),$([H0][#6])](=[OX1])([$([OX2H]),$([OX1- ])])[OX2][#6;!$(C=[O,N,S])]"
:PhosphonicDiester:
  - "[PX4;$([H1]),$([H0][#6])](=[OX1])([OX2][#6;!$(C=[O,N,S])])[OX2][#6;!$(C=[O,N,S])]"
:PhosphonicMonoamide:
  - "[PX4;$([H1]),$([H0][#6])](=[OX1])([$([OX2H]),$([OX1- ])])[#7X3H2,#7X3H1,#7X3H0]"
:PhosphonicDiamide:
  - "[PX4;$([H1]),$([H0][#6])](=[OX1])([#7X3H2,#7X3H1,#7X3H0])[#7X3H2,#7X3H1,#7X3H0]"
:PhosphonicEsteramide:
  - "[PX4;$([H1]),$([H0][#6])](=[OX1])([OX2][#6;!$(C=[O,N,S])])[#7X3H2,#7X3H1,#7X3H0]"

:Phosphonium:
  - "[PX4+;!$([P]*~[#7,#8,#15,#16])]"
:PhosphinicAcidDerivative:
  - "[PX4;$([H2]),$([H1][#6]),$([H0]([#6])[#6])](=[#8])[!#6]"
:PhosphinicAcid:
  - "[PX4;$([H2]),$([H1][#6]),$([H0]([#6])[#6])](=[OX1])[$([OX2H]),$([OX1- ])]"
:PhosphinicEster:
  - "[PX4;$([H2]),$([H1][#6]),$([H0]([#6])[#6])](=[OX1])[OX2][#6;!$(C=[O,N,S])]"
:PhosphinicAmide:
  - "[PX4;$([H2]),$([H1][#6]),$([H0]([#6])[#6])](=[OX1])[#7X3H2,#7X3H1,#7X3H0]"

:PhosphonousDerivatives:
  - "[PX3;$([H1]),$([H0][#6])]"
:PhosphonousAcid:
  - "[PX3;$([H1]),$([H0][#6])]([$([OX2H]),$([OX1- ])])[$([OX2H]),$([OX1- ])]"
:PhosphonousMonoester:
  - "[PX3;$([H1]),$([H0][#6])]([$([OX2H]),$([OX1- ])])[OX2][#6;!$(C=[O,N,S])]"
:PhosphonousDiester:
  - "[PX3;$([H1]),$([H0][#6])]([OX2][#6;!$(C=[O,N,S])])[OX2][#6;!$(C=[O,N,S])]"
:PhosphonousMonoamide:
  - "[PX3;$([H1]),$([H0][#6])]([$([OX2H]),$([OX1- ])])[#7X3H2,#7X3H1,#7X3H0]"
:PhosphonousDiamide:
  - "[PX3;$([H1]),$([H0][#6])]([#7X3H2,#7X3H1,#7X3H0])[#7X3H2,#7X3H1,#7X3H0]"
:PhosphonousEsteramide:
  - "[PX3;$([H1]),$([H0][#6])]([OX2][#6;!$(C=[O,N,S])])[#7X3H2,#7X3H1,#7X3H0]"

:PhosphinousDerivatives:
  - "[PX3;$([H2]),$([H1][#6]),$([H0]([#6])[#6])]"
:PhosphinousAcid:
  - "[PX3;$([H2]),$([H1][#6]),$([H0]([#6])[#6])][$([OX2H]),$([OX1- ])]"
:PhosphinousEster:
  - "[PX3;$([H2]),$([H1][#6]),$([H0]([#6])[#6])][OX2][#6;!$(C=[O,N,S])]"
:PhosphinousAmide:
  - "[PX3;$([H2]),$([H1][#6]),$([H0]([#6])[#6])][#7X3H2,#7X3H1,#7X3H0]"


#Sulphur
:CarbothioicAcid:
  - "[CX3;$([R0][#6]),$([H1R0])](=[OX1])[$([SX2H]),$([SX1- ])]"
:CarbodithioicAcid:
  - "[CX3;!R;$([C][#6]),$([CH]);$([C](=[SX1])[SX2H])]"
:CarbodithioicEster:
  - "[CX3;!R;$([C][#6]),$([CH]);$([C](=[SX1])[SX2][#6;!$(C=[O,N,S])])]"
:Disulfide:
  - "[SX2D2][SX2D2]"
:Isothiocyanate:
  - "[NX2]=[CX2]=[SX1]"
:SulfenicDerivative:
  - "[SX2;$([H1]),$([H0][#6])]"
:SulfenicAcid:
  - "[SX2;$([H1]),$([H0][#6])][$([OX2H]),$([OX1- ])]"
:SulfenicHalide:
  - "[SX2;$([H1]),$([H0][#6])][FX1,ClX1,BrX1,IX1]"
:SulfenicEster:
  - "[SX2;$([H1]),$([H0][#6])][OX2][#6;!$(C=[N,S])]"
:SulfenicAmide:
  - "[SX2;$([H1]),$([H0][#6])][#7X3H2,#7X3H1,#7X3H0]"

:SulfinicDerivative:
  - "[SX3;$([H1]),$([H0][#6])](=[#8])[!#6]"
:SulfinicAcid:
  - "[SX3;$([H1]),$([H0][#6])](=[OX1])[$([OX2H]),$([OX1- ])]"
:SulfinicHalide:
  - "[SX3;$([H1]),$([H0][#6])](=[OX1])[FX1,ClX1,BrX1,IX1]"
:SulfinicEster:
  - "[SX3;$([H1]),$([H0][#6])](=[OX1])[OX2][#6;!$(C=[O,N,S])]"
:SulfinicAmide:
  - "[SX3;$([H1]),$([H0][#6])](=[OX1])[#7X3H2,#7X3H1,#7X3H0]"

:Sulfite:
  - "[$([OX2]),$([OX1- ])][SX3](=[OX1])[$([OX2]),$([OX1- ])]"
:Sulfone:
  - "[$([SX4](=[OX1])(=[OX1])([#6])[#6]),$([SX4+2]([OX1- ])([OX1- ])([#6])[#6])]"
:SulfonicDerivative:
  - "[SX4;$([H1]),$([H0][#6])](=[#8])(=[#8])[!#6]"
:Sulfonicacid:
  - "[SX4;$([H1]),$([H0][#6])](=[OX1])(=[OX1])[$([OX2H]),$([OX1- ])]"
:SulfonicHalide:
  - "[SX4;$([H1]),$([H0][#6])](=[OX1])(=[OX1])[FX1,ClX1,BrX1,IX1]"
:SulfonicEster:
  - "[SX4;$([H1]),$([H0][#6])](=[OX1])(=[OX1])[OX2][#6;!$(C=[O,N,S])]"
:SulfonicAmide:
  - "[SX4;$([H1]),$([H0][#6])](=[OX1])(=[OX1])[#7X3H2,#7X3H1,#7X3H0]"

:Sulfonium:
  - "[S+;!$([S]~[!#6]);!$([S]*~[#7,#8,#15,#16])]"
:Sulfoxide:
  - "[$([SX3](=[OX1])([#6])[#6]),$([SX3+]([OX1- ])([#6])[#6])]"
:SulfuricDerivative:
  - "[SX4D4](=[#8])(=[#8])([!#6])[!#6]"
:SulfuricAcid:
  - "[SX4](=[OX1])(=[OX1])([$([OX2H]),$([OX1- ])])[$([OX2H]),$([OX1- ])]"
:SulfuricMonoester:
  - "[SX4](=[OX1])(=[OX1])([$([OX2H]),$([OX1- ])])[OX2][#6;!$(C=[O,N,S])]"
:SulfuricDiester:
  - "[SX4](=[OX1])(=[OX1])([OX2][#6;!$(C=[O,N,S])])[OX2][#6;!$(C=[O,N,S])]"
:SulfuricMonoamide:
  - "[SX4](=[OX1])(=[OX1])([#7X3H2,#7X3H1,#7X3H0])[$([OX2H]),$([OX1- ])]"
:SulfuricDiamide:
  - "[SX4](=[OX1])(=[OX1])([#7X3H2,#7X3H1,#7X3H0])[#7X3H2,#7X3H1,#7X3H0]"
:SulfuricEsteramide:
  - "[SX4](=[OX1])(=[OX1])([OX2][#6;!$(C=[O,N,S])])([#7X3H2,#7X3H1,#7X3H0])"

:Thioamide:
  - "[$([CX3;!R][#6]),$([CX3H;!R])](=[SX1])[#7X3H2,#7X3H1,#7X3H0]"
:Thiocarbonyl:
  - "[CX3]=[SX1]"
:Xanthate:
  - "[CX4][OX2][CX3](=[S])[SX2][CX4]"
:Thiocyanate:
  - "[SX2][CX2]#[NX1]"
:Thioester:
  - "[#6][SX2][CX3](=[O])[#6]"
:Thiol:
  - "[SX2H]"
:Aklythiol:
  - "[SX2H][CX4;!$(C([SX2H])~[O,S,#7,#15])]"
:Arylthiol:
  - "[SX2H][c]"

:Thiourea:
  - "[NX3][CX3](=[SX1])[NX3]"

